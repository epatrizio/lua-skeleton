require 'busted.runner' ()

local factorial = require('factorial')
local factorial_c = require('factorial_c')

describe("factorial tests with busted framework", function()
    describe("lua module", function()
        it("imperative implementation", function()
            assert.are.equal(factorial.fact_imp(0), 1)
            assert.are.equal(factorial.fact_imp(1), 1)
            assert.are.equal(factorial.fact_imp(5), 120)
        end)
        it("recursive implementation", function()
            assert.are.equal(factorial.fact_rec(0), 1)
            assert.are.equal(factorial.fact_rec(1), 1)
            assert.are.equal(factorial.fact_rec(5), 120)
        end)
        it("equality between different implementations", function()
            assert.are.equal(factorial.fact_imp(10), factorial.fact_rec(10))
        end)
        it("check raising errors", function()
            assert.has.errors(function() factorial.fact_imp(-42) end)
            assert.has.errors(function() factorial.fact_rec(-42) end)
        end)
    end)
    describe("c module", function()
        it("imperative implementation", function()
            assert.are.equal(factorial_c.fact_imp(5), 120)
        end)
        it("recursive implementation", function()
            assert.are.equal(factorial_c.fact_rec(5), 120)
        end)
        it("equality between different implementations", function()
            assert.are.equal(factorial_c.fact_imp(10), factorial_c.fact_rec(10))
        end)
        it("check raising errors", function()
            -- TODO
            -- assert.has.errors(function() factorial_c.fact_imp(-42) end)
            -- assert.has.errors(function() factorial_c.fact_rec(-42) end)
        end)
    end)
    describe("c & lua modules comparaison", function()
        assert.are.equal(factorial.fact_imp(20), factorial_c.fact_imp(20))
        assert.are.equal(factorial.fact_rec(20), factorial_c.fact_rec(20))
        assert.are.equal(factorial.fact_imp(20), factorial_c.fact_rec(20))
        assert.are.equal(factorial.fact_rec(20), factorial_c.fact_imp(20))
    end)
end)
